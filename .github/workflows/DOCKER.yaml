name: Build Docker image

# This workflow is the basis for deploying packages in the private Github registry.
# @author Fragan
# @version 0.1.0

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
        default: '.'
      registry:
        required: false
        type: string
        default: ghcr.io
      image_name:
        required: true
        type: string
      target:
        required: false
        type: string
    secrets:
      token:
        required: false
      PRIVATE_KEY:
        required: true
      SSH_USER:
        required: true
      SSH_HOST:
        required: true

jobs:

  build-image:
    if: contains(github.ref_name, 'feature')
      || contains(github.ref_name, 'hotfix')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}

      - name: Build Docker
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ inputs.context }}
          target: ${{ inputs.target }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-image:
    if: contains(github.ref_name, 'develop')
      || contains(github.ref_name, 'master')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}

      - name: Build & Push Docker
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ inputs.context }}
          target: ${{ inputs.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-production:
    if: contains(github.ref_name, 'master')
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Upgrade projet from remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/fragan/gestproj/src
            git pull
            docker compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.prod.yml up -d --build
